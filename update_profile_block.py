from pathlib import Path
path = Path(r'app/tabs/profile.tsx')
text = path.read_text(encoding='utf-8')
old_block = "          <Separator />\r\n\r\n          <YStack gap=\"$3\">\r\n            <YStack borderWidth={1} borderColor=\"$gray5\" borderRadius={12} overflow=\"hidden\">\r\n              <ListItem\r\n                hoverTheme\r\n                pressTheme\r\n                onPress={handleGoHome}\r\n                icon={<Home size={18} color=\"$gray11\" />}\r\n                iconAfter={<ChevronRight size={16} color=\"$gray9\" />}\r\n                title=\"Main menu\"\r\n              />\r\n              <Separator />\r\n              <ListItem\r\n                hoverTheme\r\n                pressTheme\r\n                onPress={handleOpenSettings}\r\n                icon={<Settings size={18} color=\"$gray11\" />}\r\n                iconAfter={<ChevronRight size={16} color=\"$gray9\" />}\r\n                title=\"Settings\"\r\n              />\r\n            </YStack>\r\n\r\n            <Button\r\n              size=\"$3\"\r\n              bg=\"$red4\"\r\n              color=\"$red11\"\r\n              hoverStyle={{ bg: '$red5' }}\r\n              pressStyle={{ bg: '$red6' }}\r\n              icon={<LogOut size={18} color=\"$red11\" />}\r\n              onPress={handleLogout}\r\n            >\r\n              Log out\r\n            </Button>\r\n          </YStack>\r\n"
new_block = "          <Separator />\r\n\r\n          <YStack gap=\"$3\">\r\n            <Pressable onPress={handleGoHome} style={({ pressed }) => ({ opacity: pressed ? 0.6 : 1 })}>\r\n              <XStack ai=\"center\" gap=\"$1\">\r\n                <ChevronLeft size={16} color=\"$gray11\" />\r\n                <Text fontSize={14} color=\"$gray11\">Main menu</Text>\r\n              </XStack>\r\n            </Pressable>\r\n\r\n            <YStack borderWidth={1} borderColor=\"$gray5\" borderRadius={12} overflow=\"hidden\">\r\n              <ListItem\r\n                hoverTheme\r\n                pressTheme\r\n                onPress={handleOpenSettings}\r\n                icon={<Settings size={18} color=\"$gray11\" />}\r\n                iconAfter={<ChevronRight size={16} color=\"$gray9\" />}\r\n                title=\"Settings\"\r\n              />\r\n            </YStack>\r\n\r\n            <Button\r\n              size=\"$3\"\r\n              bg=\"$red4\"\r\n              color=\"$red11\"\r\n              hoverStyle={{ bg: '$red5' }}\r\n              pressStyle={{ bg: '$red6' }}\r\n              icon={<LogOut size={18} color=\"$red11\" />}\r\n              onPress={handleLogout}\r\n            >\r\n              Log out\r\n            </Button>\r\n          </YStack>\r\n"
if old_block not in text:
    raise SystemExit('old block not found')
text = text.replace(old_block, new_block)
path.write_text(text, encoding='utf-8')
